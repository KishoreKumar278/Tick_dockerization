#removing previous dockers if there exists any
sudo apt-get remove docker docker-engine docker.io containerd runc

#update the software repo
sudo apt-get update
sudo apt-get install ca-certificates curl gnupg lsb-release

#official GPG key
curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg

#setting up a stable repo
echo \
  "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu \
  $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null

#installing docker
sudo apt-get install docker-ce docker-ce-cli containerd.io
 
#checking for running docker images, containers, and networks
sudo docker images
sudo docker ps
sudo docker ps -a
sudo docker network ls

#TICK components dockerization starts:
#creating a bridge network in docker 
sudo docker network create --driver bridge tick-stack-vcc

#pulling and running influxdb image, version 1.8
sudo docker run -p 8086:8086 --net=tick-stack-vcc -v influxdb:/var/lib/influxdb influxdb:1.8

#pulling and running telegraf docker image
sudo docker run --net=container:<container id> telegraf

#pulling and running the chronograf image 
sudo docker run -p 8888:8888 --net=tick-stack-vcc chronograf --influxdb-url=htpp://localhost:8086

#pulling and running kapacitor image 
sudo docker run -p 9092:9092 --net=tick-stack-vcc kapacitor

#inspect the docker network to check the connected containers
sudo docker network inspect tick-stack-vcc 
